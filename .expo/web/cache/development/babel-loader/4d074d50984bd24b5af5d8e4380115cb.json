{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/terrrive/Documents/GitHub/JavaScript_TLG_MinProject/Pause.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { Component } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport styles from \"./PopupStyles\";\n\nvar Pause = function (_Component) {\n  _inherits(Pause, _Component);\n\n  var _super = _createSuper(Pause);\n\n  function Pause() {\n    _classCallCheck(this, Pause);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Pause, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.clearScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.panel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.panelTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, \"Ready?\"), React.createElement(View, {\n        style: styles.panelButtonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.props.onHandleDashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.panelButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: styles.panelButtonIcon,\n        resizeMode: \"contain\",\n        source: Images.restartIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.props.onReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.panelButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: styles.panelButtonIcon,\n        resizeMode: \"contain\",\n        source: Images.restartIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.props.onResume,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.panelButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: styles.panelButtonIcon,\n        resizeMode: \"contain\",\n        source: Images.playIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }]);\n\n  return Pause;\n}(Component);\n\nexport { Pause as default };","map":{"version":3,"sources":["/Users/terrrive/Documents/GitHub/JavaScript_TLG_MinProject/Pause.js"],"names":["React","Component","Dashboard","styles","Pause","clearScreen","panel","panelTitle","panelButtonsContainer","props","onHandleDashboard","panelButton","panelButtonIcon","Images","restartIcon","onReset","onResume","playIcon"],"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP;AACA,OAAOC,MAAP;;IAEqBC,K;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAER,MAAM,CAACS,eADhB;AAEE,QAAA,UAAU,EAAC,SAFb;AAGE,QAAA,MAAM,EAAEC,MAAM,CAACC,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAUE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAER,MAAM,CAACS,eADhB;AAEE,QAAA,UAAU,EAAC,SAFb;AAGE,QAAA,MAAM,EAAEC,MAAM,CAACC,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAVF,EAmBE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWO,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAER,MAAM,CAACS,eADhB;AAEE,QAAA,UAAU,EAAC,SAFb;AAGE,QAAA,MAAM,EAAEC,MAAM,CAACI,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAnBF,CAHF,CADF,CADF;AAqCD;;;;EAvCgChB,S;;SAAdG,K","sourcesContent":["import { Image, Text, TouchableWithoutFeedback, View } from \"react-native\";\nimport React, { Component } from \"react\";\n\nimport Dashboard from \"./Dashboard\";\nimport styles from \"./PopupStyles\";\n\nexport default class Pause extends Component {\n  render() {\n    return (\n      <View style={styles.clearScreen}>\n        <View style={styles.panel}>\n          <Text style={styles.panelTitle}>Ready?</Text>\n\n          <View style={styles.panelButtonsContainer}>\n            <TouchableWithoutFeedback onPress={this.props.onHandleDashboard}>\n              <View style={styles.panelButton}>\n                <Image\n                  style={styles.panelButtonIcon}\n                  resizeMode=\"contain\"\n                  source={Images.restartIcon}\n                />\n              </View>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={this.props.onReset}>\n              <View style={styles.panelButton}>\n                <Image\n                  style={styles.panelButtonIcon}\n                  resizeMode=\"contain\"\n                  source={Images.restartIcon}\n                />\n              </View>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={this.props.onResume}>\n              <View style={styles.panelButton}>\n                <Image\n                  style={styles.panelButtonIcon}\n                  resizeMode=\"contain\"\n                  source={Images.playIcon}\n                />\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}