{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/terrrive/Documents/GitHub/JavaScript_TLG_MinProject/Game.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { Component } from \"react\";\nimport Clear from \"./Clear\";\nimport Constants from \"./Constants\";\nimport GameOver from \"./GameOver\";\nimport Images from \"./assets/Images\";\nimport Mole from \"./Mole\";\nimport Pause from \"./Pause\";\nimport { StatusBar } from \"expo-status-bar\";\nvar DEFAULT_TIME = 5;\nvar DEFAULT_STATE = {\n  level: 1,\n  score: 0,\n  time: DEFAULT_TIME,\n  cleared: false,\n  paused: false,\n  gameover: false,\n  health: 100\n};\n\nvar Game = function (_Component) {\n  _inherits(Game, _Component);\n\n  var _super = _createSuper(Game);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      _this.setState(DEFAULT_STATE, _this.pause);\n    };\n\n    _this.setupTicks = function () {\n      var speed = 750 - _this.state.level * 50;\n\n      if (speed < 350) {\n        speed = 350;\n      }\n\n      _this.interval = setInterval(_this.popRandomMole, speed);\n      _this.timeInterval = setInterval(_this.timerTick, 1000);\n    };\n\n    _this.reset = function () {\n      _this.molesPopping = 0;\n\n      _this.setState(DEFAULT_STATE, _this.setupTicks);\n    };\n\n    _this.handleDashboard = function () {\n      if (_this.moles.length > 1) {\n        _this.componentDidMount;\n      }\n\n      _this.props.navigation.navigate(\"Dashboard\");\n    };\n\n    _this.pause = function () {\n      if (_this.interval) clearInterval(_this.interval);\n      if (_this.timeInterval) clearInterval(_this.timeInterval);\n\n      _this.setState({\n        paused: true\n      });\n    };\n\n    _this.resume = function () {\n      _this.molesPopping = 0;\n\n      _this.setState({\n        paused: false\n      }, _this.setupTicks);\n    };\n\n    _this.nextLevel = function () {\n      _this.molesPopping = 0;\n\n      _this.setState({\n        level: _this.state.level + 1,\n        cleared: false,\n        gameover: false,\n        time: DEFAULT_TIME\n      }, _this.setupTicks);\n    };\n\n    _this.timerTick = function () {\n      if (_this.state.time === 0) {\n        clearInterval(_this.interval);\n        clearInterval(_this.timeInterval);\n\n        _this.setState({\n          cleared: true\n        });\n      } else {\n        _this.setState({\n          time: _this.state.time - 1\n        });\n      }\n    };\n\n    _this.randomBetween = function (min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n\n    _this.onFinishPopping = function (index) {\n      _this.molesPopping -= 1;\n    };\n\n    _this.popRandomMole = function () {\n      if (_this.moles.length != 12) {\n        console.log(_this.moles.length);\n        return;\n      }\n\n      var randomIndex = _this.randomBetween(0, 11);\n\n      if (!_this.moles[randomIndex].isPopping && _this.molesPopping < 3) {\n        _this.molesPopping += 1;\n\n        _this.moles[randomIndex].pop();\n      }\n    };\n\n    _this.onScore = function () {\n      _this.setState({\n        score: _this.state.score + 1\n      });\n    };\n\n    _this.onDamage = function () {\n      if (_this.state.cleared || _this.state.gameOver || _this.state.paused) {\n        return;\n      }\n\n      var targetHealth = _this.state.health - 10 < 0 ? 0 : _this.state.health - 10;\n\n      _this.setState({\n        health: targetHealth\n      });\n\n      if (targetHealth <= 0) {\n        _this.gameOver();\n      }\n    };\n\n    _this.gameOver = function () {\n      clearInterval(_this.interval);\n      clearInterval(_this.timeInterval);\n\n      _this.setState({\n        gameover: true\n      });\n    };\n\n    _this.onHeal = function () {\n      var targetHealth = _this.state.health + 10 > 100 ? 100 : _this.state.health + 10;\n\n      _this.setState({\n        health: targetHealth\n      });\n    };\n\n    _this.moles = [];\n    _this.state = DEFAULT_STATE;\n    _this.interval = null;\n    _this.timeInterval = null;\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var healthBarWidth = (Constants.MAX_WIDTH - Constants.XR * 100 - Constants.XR * 60 - Constants.XR * 6) * this.state.health / 100;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.backgroundImage,\n        resizeMode: \"stretch\",\n        source: Images.background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.topPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.statsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.levelContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.levelTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, \"Level\"), React.createElement(Text, {\n        style: styles.levelNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      }, this.state.level))), React.createElement(View, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.timeBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.timeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }, this.state.time)), React.createElement(Image, {\n        style: styles.timeIcon,\n        resizeMode: \"stretch\",\n        source: Images.timeIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.scoreBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.scoreNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 19\n        }\n      }, this.state.score)), React.createElement(Image, {\n        style: styles.scoreIcon,\n        resizeMode: \"stretch\",\n        source: Images.scoreIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.pause,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.pauseButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: styles.pauseButtonIcon,\n        resizeMode: \"stretch\",\n        source: Images.pauseIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }))))), React.createElement(View, {\n        style: styles.healthBarContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.healthBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.healthBarInner, {\n          width: healthBarWidth\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      })), React.createElement(Image, {\n        style: styles.healthIcon,\n        resizeMode: \"stretch\",\n        source: Images.healthIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      })))), React.createElement(View, {\n        style: styles.playArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }\n      }, Array.apply(null, Array(4)).map(function (el, rowIdx) {\n        return React.createElement(View, {\n          style: styles.playRow,\n          key: rowIdx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }\n        }, Array.apply(null, Array(3)).map(function (el, colIdx) {\n          var moleIdx = rowIdx * 3 + colIdx;\n          return React.createElement(View, {\n            style: styles.playCell,\n            key: colIdx,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }\n          }, React.createElement(Mole, {\n            index: moleIdx,\n            ref: function ref(_ref) {\n              _this2.moles[moleIdx] = _ref;\n            },\n            onFinishPopping: _this2.onFinishPopping,\n            onDamage: _this2.onDamage,\n            onHeal: _this2.onHeal,\n            onScore: _this2.onScore,\n            onNavigating: _this2.handleDashboard,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 23\n            }\n          }));\n        }));\n      })), this.state.cleared && React.createElement(Clear, {\n        onReset: this.reset,\n        onNextLevel: this.nextLevel,\n        level: this.state.level,\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }\n      }), this.state.gameover && React.createElement(GameOver, {\n        onReset: this.reset,\n        level: this.state.level,\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }\n      }), this.state.paused && React.createElement(Pause, {\n        onReset: this.reset,\n        onResume: this.resume,\n        onHandleDashboard: this.handleDashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nGame.navigationOptions = {\n  headerShown: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  backgroundImage: {\n    width: Constants.MAX_WIDTH,\n    height: Constants.MAX_HEIGHT,\n    position: \"absolute\"\n  },\n  topPanel: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    height: Constants.YR * 250,\n    flexDirection: \"column\"\n  },\n  statsContainer: {\n    width: Constants.MAX_WIDTH,\n    height: Constants.YR * 120,\n    flexDirection: \"row\"\n  },\n  stats: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  pauseButton: {\n    width: Constants.YR * 50,\n    height: Constants.YR * 50,\n    backgroundColor: \"black\",\n    borderColor: \"white\",\n    borderWidth: 3,\n    borderRadius: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pauseButtonIcon: {\n    width: Constants.YR * 25,\n    height: Constants.YR * 25\n  },\n  levelContainer: {\n    width: Constants.YR * 80,\n    height: Constants.YR * 80,\n    backgroundColor: \"#ff1a1a\",\n    borderColor: \"white\",\n    borderWidth: 3,\n    borderRadius: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  levelTitle: {\n    fontSize: 21,\n    color: \"white\"\n  },\n  levelNumber: {\n    fontSize: 17,\n    color: \"white\"\n  },\n  scoreIcon: {\n    position: \"absolute\",\n    left: 0,\n    width: Constants.YR * 40,\n    height: Constants.YR * 40\n  },\n  scoreBar: {\n    height: Constants.YR * 25,\n    position: \"absolute\",\n    left: 20,\n    right: 5,\n    backgroundColor: \"white\",\n    borderRadius: 13,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scoreNumber: {\n    fontSize: 17,\n    color: \"black\"\n  },\n  timeIcon: {\n    position: \"absolute\",\n    left: 0,\n    width: Constants.YR * 40,\n    height: Constants.YR * 40\n  },\n  timeBar: {\n    height: Constants.YR * 25,\n    position: \"absolute\",\n    left: 20,\n    right: 5,\n    backgroundColor: \"white\",\n    borderRadius: 13,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  timeNumber: {\n    fontSize: 17,\n    color: \"black\"\n  },\n  healthBarContainer: {\n    height: Constants.YR * 40,\n    width: Constants.MAX_WIDTH - Constants.XR * 120,\n    marginLeft: Constants.XR * 60\n  },\n  healthIcon: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: Constants.YR * 46,\n    height: Constants.YR * 40\n  },\n  healthBar: {\n    height: Constants.YR * 20,\n    width: Constants.MAX_WIDTH - Constants.XR * 100 - Constants.XR * 60,\n    marginLeft: Constants.XR * 40,\n    marginTop: Constants.YR * 10,\n    backgroundColor: \"white\",\n    borderRadius: Constants.YR * 10\n  },\n  healthBarInner: {\n    position: \"absolute\",\n    backgroundColor: \"#ff1a1a\",\n    left: Constants.XR * 3,\n    top: Constants.YR * 3,\n    bottom: Constants.YR * 3,\n    borderRadius: Constants.YR * 8\n  },\n  playArea: {\n    width: Constants.MAX_WIDTH,\n    marginTop: Constants.YR * 250,\n    height: Constants.MAX_HEIGHT - Constants.YR * 250 - Constants.YR * 112,\n    flexDirection: \"column\"\n  },\n  playRow: {\n    height: (Constants.MAX_HEIGHT - Constants.YR * 250 - Constants.YR * 112) / 4,\n    width: Constants.MAX_WIDTH,\n    flexDirection: \"row\"\n  },\n  playCell: {\n    width: Constants.MAX_WIDTH / 3,\n    height: (Constants.MAX_HEIGHT - Constants.YR * 250 - Constants.YR * 112) / 4,\n    alignItems: \"center\"\n  }\n});\nexport default Game;","map":{"version":3,"sources":["/Users/terrrive/Documents/GitHub/JavaScript_TLG_MinProject/Game.js"],"names":["React","Component","Clear","Constants","GameOver","Images","Mole","Pause","StatusBar","DEFAULT_TIME","DEFAULT_STATE","level","score","time","cleared","paused","gameover","health","Game","props","componentDidMount","setState","pause","setupTicks","speed","state","interval","setInterval","popRandomMole","timeInterval","timerTick","reset","molesPopping","handleDashboard","moles","length","navigation","navigate","clearInterval","resume","nextLevel","randomBetween","min","max","Math","floor","random","onFinishPopping","index","console","log","randomIndex","isPopping","pop","onScore","onDamage","gameOver","targetHealth","onHeal","healthBarWidth","MAX_WIDTH","XR","styles","container","backgroundImage","background","topPanel","statsContainer","stats","levelContainer","levelTitle","levelNumber","timeBar","timeNumber","timeIcon","scoreBar","scoreNumber","scoreIcon","pauseButton","pauseButtonIcon","pauseIcon","healthBarContainer","healthBar","healthBarInner","width","healthIcon","playArea","Array","apply","map","el","rowIdx","playRow","colIdx","moleIdx","playCell","ref","navigationOptions","headerShown","StyleSheet","create","flex","flexDirection","height","MAX_HEIGHT","position","top","left","right","YR","justifyContent","alignItems","backgroundColor","borderColor","borderWidth","borderRadius","fontSize","color","marginLeft","marginTop","bottom"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from \"react-native\";\nimport React, { Component } from \"react\";\n\nimport Clear from \"./Clear\";\nimport Constants from \"./Constants\";\nimport GameOver from \"./GameOver\";\nimport Images from \"./assets/Images\";\nimport Mole from \"./Mole\";\nimport Pause from \"./Pause\";\nimport { StatusBar } from \"expo-status-bar\";\n\nconst DEFAULT_TIME = 5;\nconst DEFAULT_STATE = {\n  level: 1,\n  score: 0,\n  time: DEFAULT_TIME,\n  cleared: false,\n  paused: false,\n  gameover: false,\n  health: 100,\n};\n\nclass Game extends Component {\n  static navigationOptions = {\n    headerShown: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.moles = [];\n    this.state = DEFAULT_STATE;\n    this.interval = null;\n    this.timeInterval = null;\n  }\n\n  componentDidMount = () => {\n    this.setState(DEFAULT_STATE, this.pause);\n  };\n\n  setupTicks = () => {\n    let speed = 750 - this.state.level * 50;\n    if (speed < 350) {\n      speed = 350;\n    }\n    this.interval = setInterval(this.popRandomMole, speed);\n    this.timeInterval = setInterval(this.timerTick, 1000);\n  };\n\n  reset = () => {\n    this.molesPopping = 0;\n\n    this.setState(DEFAULT_STATE, this.setupTicks);\n  };\n  //  return the player back to the dashboard\n  handleDashboard = () => {\n    if (this.moles.length > 1) {\n      this.componentDidMount;\n    }\n    this.props.navigation.navigate(\"Dashboard\");\n  };\n\n  pause = () => {\n    if (this.interval) clearInterval(this.interval);\n    if (this.timeInterval) clearInterval(this.timeInterval);\n    this.setState({\n      paused: true,\n    });\n  };\n\n  resume = () => {\n    this.molesPopping = 0;\n    this.setState(\n      {\n        paused: false,\n      },\n      this.setupTicks\n    );\n  };\n\n  nextLevel = () => {\n    this.molesPopping = 0;\n\n    this.setState(\n      {\n        level: this.state.level + 1,\n        cleared: false,\n        gameover: false,\n        time: DEFAULT_TIME,\n      },\n      this.setupTicks\n    );\n  };\n\n  timerTick = () => {\n    if (this.state.time === 0) {\n      clearInterval(this.interval);\n      clearInterval(this.timeInterval);\n      this.setState({\n        cleared: true,\n      });\n    } else {\n      this.setState({\n        time: this.state.time - 1,\n      });\n    }\n  };\n\n  randomBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  onFinishPopping = (index) => {\n    this.molesPopping -= 1;\n  };\n\n  popRandomMole = () => {\n    if (this.moles.length != 12) {\n      console.log(this.moles.length);\n      return;\n    }\n\n    let randomIndex = this.randomBetween(0, 11);\n    if (!this.moles[randomIndex].isPopping && this.molesPopping < 3) {\n      this.molesPopping += 1;\n      this.moles[randomIndex].pop();\n    }\n  };\n\n  onScore = () => {\n    this.setState({\n      score: this.state.score + 1,\n    });\n  };\n\n  onDamage = () => {\n    if (this.state.cleared || this.state.gameOver || this.state.paused) {\n      return;\n    }\n\n    let targetHealth = this.state.health - 10 < 0 ? 0 : this.state.health - 10;\n\n    this.setState({\n      health: targetHealth,\n    });\n\n    if (targetHealth <= 0) {\n      this.gameOver();\n    }\n  };\n\n  gameOver = () => {\n    clearInterval(this.interval);\n    clearInterval(this.timeInterval);\n\n    this.setState({\n      gameover: true,\n    });\n  };\n\n  onHeal = () => {\n    let targetHealth =\n      this.state.health + 10 > 100 ? 100 : this.state.health + 10;\n    this.setState({\n      health: targetHealth,\n    });\n  };\n\n  render() {\n    let healthBarWidth =\n      ((Constants.MAX_WIDTH -\n        Constants.XR * 100 -\n        Constants.XR * 60 -\n        Constants.XR * 6) *\n        this.state.health) /\n      100;\n    return (\n      <View style={styles.container}>\n        <Image\n          style={styles.backgroundImage}\n          resizeMode=\"stretch\"\n          source={Images.background}\n        />\n        <View style={styles.topPanel}>\n          <SafeAreaView>\n            <View style={styles.statsContainer}>\n              <View style={styles.stats}>\n                <View style={styles.levelContainer}>\n                  <Text style={styles.levelTitle}>Level</Text>\n                  <Text style={styles.levelNumber}>{this.state.level}</Text>\n                </View>\n              </View>\n              <View style={styles.stats}>\n                <View style={styles.timeBar}>\n                  <Text style={styles.timeNumber}>{this.state.time}</Text>\n                </View>\n                <Image\n                  style={styles.timeIcon}\n                  resizeMode=\"stretch\"\n                  source={Images.timeIcon}\n                />\n              </View>\n              <View style={styles.stats}>\n                <View style={styles.scoreBar}>\n                  <Text style={styles.scoreNumber}>{this.state.score}</Text>\n                </View>\n                <Image\n                  style={styles.scoreIcon}\n                  resizeMode=\"stretch\"\n                  source={Images.scoreIcon}\n                />\n              </View>\n              <View style={styles.stats}>\n                <TouchableWithoutFeedback onPress={this.pause}>\n                  <View style={styles.pauseButton}>\n                    <Image\n                      style={styles.pauseButtonIcon}\n                      resizeMode=\"stretch\"\n                      source={Images.pauseIcon}\n                    />\n                  </View>\n                </TouchableWithoutFeedback>\n              </View>\n            </View>\n\n            <View style={styles.healthBarContainer}>\n              <View style={styles.healthBar}>\n                <View\n                  style={[styles.healthBarInner, { width: healthBarWidth }]}\n                />\n              </View>\n              <Image\n                style={styles.healthIcon}\n                resizeMode=\"stretch\"\n                source={Images.healthIcon}\n              />\n            </View>\n          </SafeAreaView>\n        </View>\n        <View style={styles.playArea}>\n          {Array.apply(null, Array(4)).map((el, rowIdx) => {\n            return (\n              <View style={styles.playRow} key={rowIdx}>\n                {Array.apply(null, Array(3)).map((el, colIdx) => {\n                  let moleIdx = rowIdx * 3 + colIdx;\n\n                  return (\n                    <View style={styles.playCell} key={colIdx}>\n                      <Mole\n                        index={moleIdx}\n                        ref={(ref) => {\n                          this.moles[moleIdx] = ref;\n                        }}\n                        onFinishPopping={this.onFinishPopping}\n                        onDamage={this.onDamage}\n                        onHeal={this.onHeal}\n                        onScore={this.onScore}\n                        onNavigating={this.handleDashboard}\n                      />\n                    </View>\n                  );\n                })}\n              </View>\n            );\n          })}\n        </View>\n        {this.state.cleared && (\n          <Clear\n            onReset={this.reset}\n            onNextLevel={this.nextLevel}\n            level={this.state.level}\n            score={this.state.score}\n          />\n        )}\n        {this.state.gameover && (\n          <GameOver\n            onReset={this.reset}\n            level={this.state.level}\n            score={this.state.score}\n          />\n        )}\n        {this.state.paused && (\n          <Pause\n            onReset={this.reset}\n            onResume={this.resume}\n            onHandleDashboard={this.handleDashboard}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n  },\n\n  backgroundImage: {\n    width: Constants.MAX_WIDTH,\n    height: Constants.MAX_HEIGHT,\n    position: \"absolute\",\n  },\n  topPanel: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    height: Constants.YR * 250,\n    flexDirection: \"column\",\n  },\n  statsContainer: {\n    width: Constants.MAX_WIDTH,\n    height: Constants.YR * 120,\n    flexDirection: \"row\",\n  },\n  stats: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pauseButton: {\n    width: Constants.YR * 50,\n    height: Constants.YR * 50,\n    backgroundColor: \"black\",\n    borderColor: \"white\",\n    borderWidth: 3,\n    borderRadius: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  pauseButtonIcon: {\n    width: Constants.YR * 25,\n    height: Constants.YR * 25,\n  },\n  levelContainer: {\n    width: Constants.YR * 80,\n    height: Constants.YR * 80,\n    backgroundColor: \"#ff1a1a\",\n    borderColor: \"white\",\n    borderWidth: 3,\n    borderRadius: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  levelTitle: {\n    fontSize: 21,\n    color: \"white\",\n  },\n  levelNumber: {\n    fontSize: 17,\n    color: \"white\",\n  },\n  scoreIcon: {\n    position: \"absolute\",\n    left: 0,\n    width: Constants.YR * 40,\n    height: Constants.YR * 40,\n  },\n  scoreBar: {\n    height: Constants.YR * 25,\n    position: \"absolute\",\n    left: 20,\n    right: 5,\n    backgroundColor: \"white\",\n    borderRadius: 13,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  scoreNumber: {\n    fontSize: 17,\n    color: \"black\",\n  },\n  timeIcon: {\n    position: \"absolute\",\n    left: 0,\n    width: Constants.YR * 40,\n    height: Constants.YR * 40,\n  },\n  timeBar: {\n    height: Constants.YR * 25,\n    position: \"absolute\",\n    left: 20,\n    right: 5,\n    backgroundColor: \"white\",\n    borderRadius: 13,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  timeNumber: {\n    fontSize: 17,\n    color: \"black\",\n  },\n  healthBarContainer: {\n    height: Constants.YR * 40,\n    width: Constants.MAX_WIDTH - Constants.XR * 120,\n    marginLeft: Constants.XR * 60,\n  },\n  healthIcon: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: Constants.YR * 46,\n    height: Constants.YR * 40,\n  },\n  healthBar: {\n    height: Constants.YR * 20,\n    width: Constants.MAX_WIDTH - Constants.XR * 100 - Constants.XR * 60,\n    marginLeft: Constants.XR * 40,\n    marginTop: Constants.YR * 10,\n    backgroundColor: \"white\",\n    borderRadius: Constants.YR * 10,\n  },\n  healthBarInner: {\n    position: \"absolute\",\n    backgroundColor: \"#ff1a1a\",\n    left: Constants.XR * 3,\n\n    top: Constants.YR * 3,\n    bottom: Constants.YR * 3,\n    borderRadius: Constants.YR * 8,\n  },\n  playArea: {\n    width: Constants.MAX_WIDTH,\n    marginTop: Constants.YR * 250,\n    height: Constants.MAX_HEIGHT - Constants.YR * 250 - Constants.YR * 112,\n    flexDirection: \"column\",\n  },\n  playRow: {\n    height:\n      (Constants.MAX_HEIGHT - Constants.YR * 250 - Constants.YR * 112) / 4,\n    width: Constants.MAX_WIDTH,\n    flexDirection: \"row\",\n  },\n  playCell: {\n    width: Constants.MAX_WIDTH / 3,\n    height:\n      (Constants.MAX_HEIGHT - Constants.YR * 250 - Constants.YR * 112) / 4,\n    alignItems: \"center\",\n  },\n});\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}